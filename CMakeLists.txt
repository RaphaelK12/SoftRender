cmake_minimum_required(VERSION 3.7)
project(gl)

set(CMAKE_CXX_STANDARD 11)
if (MINGW)
    message(PLATFORM ">>> MINGW")
    set(CMAKE_EXE_LINKER_FLAGS "-lopengl32  -lgdi32 -luser32 -lkernel32 -lglu32")
endif (MINGW)
if (APPLE)
    message(PLATFORM ">>> APPLE")
    set(CMAKE_EXE_LINKER_FLAGS " -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo")
endif (APPLE)

aux_source_directory(./ SOURCE_FILES)
aux_source_directory(external/glfw/deps OTHER_SRC_FILES)
aux_source_directory(base OTHER_SRC_FILES)
aux_source_directory(ui OTHER_SRC_FILES)
aux_source_directory(external OTHER_SRC_FILES)
aux_source_directory(render OTHER_SRC_FILES)
aux_source_directory(samples OTHER_SRC_FILES)
aux_source_directory(samples/alg OTHER_SRC_FILES)
aux_source_directory(samples/gl OTHER_SRC_FILES)
aux_source_directory(samples/softrender OTHER_SRC_FILES)
aux_source_directory(math OTHER_SRC_FILES)
list(APPEND SOURCE_FILES ${OTHER_SRC_FILES})

include_directories(external/glfw/deps)
include_directories(external/glfw)
include_directories(${PROJECT_SOURCE_DIR}/base)
include_directories(${PROJECT_SOURCE_DIR}/ui)
include_directories(${PROJECT_SOURCE_DIR}/external)
include_directories(${PROJECT_SOURCE_DIR}/render)
include_directories(${PROJECT_SOURCE_DIR}/math)
include_directories(${PROJECT_SOURCE_DIR}/samples)
if (MINGW)
    include_directories(${PROJECT_SOURCE_DIR}/external/thread)
endif (MINGW)

link_directories(external/glfw/deps)
link_directories(${PROJECT_SOURCE_DIR}/base)
link_directories(${PROJECT_SOURCE_DIR}/ui)
link_directories(${PROJECT_SOURCE_DIR}/external)
link_directories(${PROJECT_SOURCE_DIR}/render)
link_directories(${PROJECT_SOURCE_DIR}/samples)
link_directories(${PROJECT_SOURCE_DIR}/samples/alg)
link_directories(${PROJECT_SOURCE_DIR}/samples/gl)
link_directories(${PROJECT_SOURCE_DIR}/samples/softrender)
link_directories(${PROJECT_SOURCE_DIR}/math)

if (MINGW)
    link_directories(external/glfw/win32)
    link_directories(external/assimp/win32)
    link_directories(external/zlib/win32)
endif (MINGW)
if (APPLE)
    link_directories(external/glfw/mac)
    link_directories(external/assimp/mac)
    link_directories(external/zlib/mac)
endif (APPLE)

add_executable(gl ${SOURCE_FILES} samples/softrender/LoadModel.cpp samples/softrender/LoadModel.h)

target_link_libraries(gl glfw3.a assimp.a zlibstatic.a)

